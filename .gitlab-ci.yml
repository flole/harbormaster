image: python:3.9

stages:
  - test
  - build
  - release

variables:
  PYINSTALLER_IMAGE_NAME: "$CI_REGISTRY_IMAGE/pyinstaller:latest"

test:
  variables:
    PRE_COMMIT_HOME: "$CI_PROJECT_DIR/.cache/pre-commit"
    PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .cache/pre-commit
      - .cache/pip
      - venv
  stage: test
  before_script:
    - pip install virtualenv poetry pre-commit
    - virtualenv venv
    - source venv/bin/activate
    - poetry config virtualenvs.create false
    - poetry install --no-root
  script:
    - pre-commit run -a --hook-stage manual
    - pytest

build image for linux build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker build -f misc/Dockerfile.pyinstall -t "$PYINSTALLER_IMAGE_NAME" .
    - docker push "$PYINSTALLER_IMAGE_NAME"
  rules:
    - changes:
      - misc/build-binary.sh
      - misc/Dockerfile.pyinstall

build linux:
  stage: release
  image:
    name: "$PYINSTALLER_IMAGE_NAME"
    entrypoint: [""]
  script:
    - misc/build-binary.sh
  artifacts:
    paths:
      - dist/linux/harbormaster

release pypi:
  variables:
    TWINE_USERNAME: "__token__"
  stage: release
  rules:
  - if: $CI_COMMIT_TAG =~ /^v\d+.\d+.\d+$/
  - if: $CI_COMMIT_BRANCH == "master"
  needs: [test]
  script:
      - pip install -U twine gitchangelog pystache poetry
      - echo "" >> README.md
      - gitchangelog >> README.md
      - poetry build
      - if [[ -z "$TWINE_USERNAME" || -z $(echo "$CI_COMMIT_TAG" | grep -P "^v\d+\.\d+\.\d+") ]]; then twine check dist/*; else twine upload dist/*; fi

release docker:
  image: docker:latest
  stage: release
  needs: [test]
  rules:
  - if: $CI_COMMIT_TAG =~ /^v\d+.\d+.\d+$/
  - if: $CI_COMMIT_BRANCH == "master"
  services:
    - docker:dind
  before_script:
    - docker login -u "$DOCKERIO_REGISTRY_USER" -p "$DOCKERIO_REGISTRY_PASSWORD" docker.io
  script:
    - ./misc/docker-build.sh --push
