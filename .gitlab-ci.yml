image: python:3.8

stages:
  - test
  - build
  - release

test:
  variables:
    PRE_COMMIT_HOME: "$CI_PROJECT_DIR/.cache/pre-commit"
    PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .cache/pre-commit
      - .cache/pip
      - venv
  stage: test
  before_script:
    - pip install virtualenv poetry pre-commit
    - virtualenv venv
    - source venv/bin/activate
    - poetry config virtualenvs.create false
    - poetry install --no-root
  script:
    - pre-commit run -a --hook-stage manual

build linux:
  stage: build
  variables:
    PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/root/.pyenv/shims/"
  image:
    name: cdrx/pyinstaller-linux
    entrypoint: [""]
  script:
    - pwd
    - mv * /src/
    - cd /src
    - pip3 install poetry
    - poetry config virtualenvs.create false
    - poetry export --without-hashes -o requirements.txt
    - /entrypoint.sh
    - mv "dist/linux/harbormaster" "${CI_PROJECT_DIR}"
  artifacts:
    paths:
      - harbormaster

pypi:
  variables:
    TWINE_USERNAME: "__token__"
  stage: release
  needs: [test]
  script:
      - pip install -U twine gitchangelog pystache poetry
      - echo "" >> README.md
      - gitchangelog >> README.md
      - poetry build
      - twine upload dist/*
      - if [ -z "$TWINE_USERNAME" ]; then twine check; else twine upload dist/*; fi
